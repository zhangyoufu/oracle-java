on:
  push:
    paths:
    - .github/actions/deb-builder/**
    - .github/workflows/build.yml
    - debian/**
    - jdk*/**
    - package.py
    - requirements-build.txt
    - source.py

jobs:
  sync:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Serialize workflow runs
      if: github.ref == 'refs/heads/master'
      uses: softprops/turnstyle@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: sync
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
# DONT-CHECKSUM-BEGIN
        major: [8, 11, 15]
# DONT-CHECKSUM-END
    env:
      MAJOR: ${{ matrix.major }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-build.txt
    - name: Load source.yml
      run: ./source.py
    - name: Load metadata from gh-pages
      run: |
        set +e
        BODY=$(curl -fsSL https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/gh-pages/oracle-java-${MAJOR}.sh)
        CODE=$?
        set -e
        if [ ${CODE} -eq 22 ]; then
        	echo "last build not available"
        	cat >$GITHUB_ENV <<-EOF
        		LAST_VERSION=
        		LAST_REVISION=
        		LAST_CHECKSUM=
        	EOF
        else
        	eval "${BODY}"
        	cat >$GITHUB_ENV <<-EOF
        		LAST_VERSION=$VERSION
        		LAST_REVISION=$REVISION
        		LAST_CHECKSUM=$CHECKSUM
        	EOF
        fi
    - name: Update metadata
      env:
        FILES: |-
          .github/actions/deb-builder/**
          .github/workflows/build.yml
          debian/**
          jdk${{ env.MAJOR }}/**
          package.py
          source.py
      run: |
        CHECKSUM=$(./hashFiles.py <<<${FILES})
        if [ "${CHECKSUM}" = "${LAST_CHECKSUM}" ]; then
        	cat >$GITHUB_ENV <<-EOF
        		VERSION=$LAST_VERSION
        		REVISION=$LAST_REVISION
        		CHECKSUM=$LAST_CHECKSUM
        		UPDATED=false
        	EOF
        elif [ "${VERSION}" = "${LAST_VERSION}" ]; then
        	cat >$GITHUB_ENV <<-EOF
        		VERSION=$LAST_VERSION
        		REVISION=$((LAST_REVISION+1))
        		CHECKSUM=$CHECKSUM
        		UPDATED=true
        	EOF
        else
        	cat >$GITHUB_ENV <<-EOF
        		VERSION=$VERSION
        		REVISION=1
        		CHECKSUM=$CHECKSUM
        		UPDATED=true
        	EOF
        fi
    - name: Download JDK from cache
      if: env.CHECKSUM != env.LAST_CHECKSUM
      uses: actions/cache@v2
      id: jdk-cache
      with:
        path: ${{ env.FILENAME }}
        key: jdk-${{ env.SHA256 }}
    - name: Download JDK from Oracle
      if: env.CHECKSUM != env.LAST_CHECKSUM && steps.jdk-cache.outputs.cache-hit != 'true'
      run: |
        wget --quiet --show-progress --progress=dot:giga --output-document="${FILENAME}" --header 'Cookie: oraclelicense' "${URL}"
    - name: Check JDK integrity
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        echo "${SHA256}  ${FILENAME}" | sha256sum --check
    - name: Extract JDK
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        mkdir debian/tmp
        tar --extract --file "${FILENAME}" --directory=debian/tmp --no-same-owner --strip-components=1
    - name: Invoke JDK-specific prepare.sh
      if: env.CHECKSUM != env.LAST_CHECKSUM
      working-directory: ./debian/tmp
      run: ../../jdk${{ env.MAJOR }}/prepare.sh
    - name: Load package.yml
      if: env.CHECKSUM != env.LAST_CHECKSUM
      env:
        MAINTAINER: ${{ secrets.MAINTAINER }}
      run: ./package.py
    - name: Change file owner to root
      run: sudo chown -R root:root debian/
    - name: Build .deb
      if: env.CHECKSUM != env.LAST_CHECKSUM
      uses: ./.github/actions/deb-builder
      with:
        args: --build=binary --no-sign
    - name: Download .deb from gh-pages
      if: env.CHECKSUM == env.LAST_CHECKSUM
      run: svn export --force "https://github.com/${GITHUB_REPOSITORY}/branches/gh-pages/pool/stable/o/oracle-java-${MAJOR}" .
    - name: Save metadata
      run: |
        cat >oracle-java-${MAJOR}.sh <<-EOF
        	VERSION=${VERSION}
        	REVISION=${REVISION}
        	CHECKSUM=${CHECKSUM}
        	UPDATED=${UPDATED}
        EOF
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: jdk${{ env.MAJOR }}
        path: |
          *.deb
          oracle-java-${{ env.MAJOR }}.sh
  publish:
    runs-on: ubuntu-20.04
    needs: build
    timeout-minutes: 10
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifact
    - name: Install aptly
      run: |
        sudo apt-get update
        DEBIAN_FRONTEND=noninteractive sudo --preserve-env apt-get install --yes --no-install-recommends --option Dpkg::Use-Pty=0 aptly
    - name: Import signing key
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      run: |
        gpg1 --import <<<${SIGNING_KEY}
    - name: Sign and publish .deb
      run: |
        aptly repo create oracle-java
        aptly repo add oracle-java artifact/*/*.deb
        aptly publish repo -distribution any -component stable oracle-java
    - name: Add extra files (public key & metadata)
      run: |
        gpg --export >~/.aptly/public/oracle-java.gpg
        gpg --export --armor >~/.aptly/public/oracle-java.asc
        mv artifact/*/*.sh ~/.aptly/public/
    - name: Push to gh-pages
      if: github.ref == 'refs/heads/master'
      env:
        PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        cd ~/.aptly/public
        git init .
        git remote add origin https://github.com/${GITHUB_REPOSITORY}.git
        git config http.https://github.com/.extraheader "Authorization: Basic $(echo -n "dummy:${PERSONAL_ACCESS_TOKEN}" | base64 --wrap=0)"
        git checkout -b gh-pages
        git add --all
        git config user.name 'GitHub Actions'
        git config user.email "$(whoami)@$(hostname --fqdn)"
        git commit --message 'automatic commit'
        git push --force --set-upstream origin gh-pages
